import numpy as np

# D8 směrové offsety a kódy (dle ArcGIS konvence)
D8_OFFSETS = [
    (-1, 1),   # NE = 128
    (0, 1),    # E  = 1
    (1, 1),    # SE = 2
    (1, 0),    # S  = 4
    (1, -1),   # SW = 8
    (0, -1),   # W  = 16
    (-1, -1),  # NW = 32
    (-1, 0)    # N  = 64
]
D8_CODES = [128, 1, 2, 4, 8, 16, 32, 64]
SQRT2 = np.sqrt(2)

# Vzdálenosti ke každému sousedovi (diagonály = sqrt(2), ostatní = 1)
D8_DIST = [SQRT2, 1, SQRT2, 1, SQRT2, 1, SQRT2, 1]

def compute_d8_direction(dem: np.ndarray) -> np.ndarray:
    rows, cols = dem.shape
    flow_dir = np.zeros((rows, cols), dtype=np.uint8)

    for i in range(1, rows - 1):
        for j in range(1, cols - 1):
            max_slope = -np.inf
            direction = 0

            center = dem[i, j]

            for k, (dy, dx) in enumerate(D8_OFFSETS):
                ni, nj = i + dy, j + dx
                neighbor = dem[ni, nj]
                dz = center - neighbor
                slope = dz / D8_DIST[k]

                if slope > max_slope and slope > 0:
                    max_slope = slope
                    direction = D8_CODES[k]

            flow_dir[i, j] = direction

    return flow_dir
